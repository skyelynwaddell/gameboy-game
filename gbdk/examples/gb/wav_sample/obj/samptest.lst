                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module samptest
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl b_play_sample2
                                     13 	.globl _play_sample2
                                     14 	.globl b_play_sample1
                                     15 	.globl _play_sample1
                                     16 	.globl _play_isr
                                     17 	.globl _puts
                                     18 	.globl _wait_vbl_done
                                     19 	.globl _set_interrupts
                                     20 	.globl _joypad
                                     21 	.globl _add_TIM
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DATA
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _INITIALIZED
                                     33 ;--------------------------------------------------------
                                     34 ; absolute external ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DABS (ABS)
                                     37 ;--------------------------------------------------------
                                     38 ; global & static initialisations
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _GSINIT
                                     42 	.area _GSFINAL
                                     43 	.area _GSINIT
                                     44 ;--------------------------------------------------------
                                     45 ; Home
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 	.area _HOME
                                     49 ;--------------------------------------------------------
                                     50 ; code
                                     51 ;--------------------------------------------------------
                                     52 	.area _CODE
                                     53 ;src/samptest.c:10: void main()
                                     54 ;	---------------------------------
                                     55 ; Function main
                                     56 ; ---------------------------------
      000000                         57 _main::
                                     58 ;src/samptest.c:13: NR52_REG = 0x80u;
      000000 3E 80            [ 8]   59 	ld	a, #0x80
      000002 E0r00            [12]   60 	ldh	(_NR52_REG + 0), a
                                     61 ;src/samptest.c:14: NR51_REG = 0xffu;
      000004 3E FF            [ 8]   62 	ld	a, #0xff
      000006 E0r00            [12]   63 	ldh	(_NR51_REG + 0), a
                                     64 ;src/samptest.c:15: NR50_REG = 0x77u;
      000008 3E 77            [ 8]   65 	ld	a, #0x77
      00000A E0r00            [12]   66 	ldh	(_NR50_REG + 0), a
                                     67 ;src/samptest.c:21: }
      00000C F3               [ 4]   68 	di
                                     69 ;src/samptest.c:18: TMA_REG = 0xC0u, TAC_REG = 0x07u;
      00000D 3E C0            [ 8]   70 	ld	a, #0xc0
      00000F E0r00            [12]   71 	ldh	(_TMA_REG + 0), a
      000011 3E 07            [ 8]   72 	ld	a, #0x07
      000013 E0r00            [12]   73 	ldh	(_TAC_REG + 0), a
                                     74 ;src/samptest.c:19: add_TIM(play_isr);    
      000015 11r00r00         [12]   75 	ld	de, #_play_isr
      000018 D5               [16]   76 	push	de
      000019 CDr00r00         [24]   77 	call	_add_TIM
      00001C E1               [12]   78 	pop	hl
                                     79 ;src/samptest.c:20: set_interrupts(VBL_IFLAG | TIM_IFLAG);
      00001D 3E 05            [ 8]   80 	ld	a, #0x05
      00001F F5               [16]   81 	push	af
      000020 33               [ 8]   82 	inc	sp
      000021 CDr00r00         [24]   83 	call	_set_interrupts
      000024 33               [ 8]   84 	inc	sp
      000025 FB               [ 4]   85 	ei
                                     86 ;src/samptest.c:23: puts("PRESS A/B TO PLAY\n");
      000026 11r64r00         [12]   87 	ld	de, #___str_0
      000029 CDr00r00         [24]   88 	call	_puts
                                     89 ;src/samptest.c:25: while(1)
      00002C                         90 00113$:
                                     91 ;src/samptest.c:27: UINT8 j = joypad();
      00002C CDr00r00         [24]   92 	call	_joypad
                                     93 ;src/samptest.c:28: if (j & J_A) {
      00002F CB 67            [ 8]   94 	bit	4, a
      000031 28 14            [12]   95 	jr	Z, 00110$
                                     96 ;src/samptest.c:29: play_sample1();
      000033 1Er00            [ 8]   97 	ld	e, #b_play_sample1
      000035 21r00r00         [12]   98 	ld	hl, #_play_sample1
      000038 CDr00r00         [24]   99 	call	___sdcc_bcall_ehl
                                    100 ;src/samptest.c:30: while (joypad() & J_A) wait_vbl_done();
      00003B                        101 00101$:
      00003B CDr00r00         [24]  102 	call	_joypad
      00003E CB 67            [ 8]  103 	bit	4, a
      000040 28 1D            [12]  104 	jr	Z, 00111$
      000042 CDr00r00         [24]  105 	call	_wait_vbl_done
      000045 18 F4            [12]  106 	jr	00101$
      000047                        107 00110$:
                                    108 ;src/samptest.c:32: if (j & J_B) {
      000047 CB 6F            [ 8]  109 	bit	5, a
      000049 28 14            [12]  110 	jr	Z, 00111$
                                    111 ;src/samptest.c:33: play_sample2();
      00004B 1Er00            [ 8]  112 	ld	e, #b_play_sample2
      00004D 21r00r00         [12]  113 	ld	hl, #_play_sample2
      000050 CDr00r00         [24]  114 	call	___sdcc_bcall_ehl
                                    115 ;src/samptest.c:34: while (joypad() & J_B) wait_vbl_done();
      000053                        116 00104$:
      000053 CDr00r00         [24]  117 	call	_joypad
      000056 CB 6F            [ 8]  118 	bit	5, a
      000058 28 05            [12]  119 	jr	Z, 00111$
      00005A CDr00r00         [24]  120 	call	_wait_vbl_done
      00005D 18 F4            [12]  121 	jr	00104$
      00005F                        122 00111$:
                                    123 ;src/samptest.c:36: wait_vbl_done();
      00005F CDr00r00         [24]  124 	call	_wait_vbl_done
                                    125 ;src/samptest.c:38: }
      000062 18 C8            [12]  126 	jr	00113$
      000064                        127 ___str_0:
      000064 50 52 45 53 53 20 41   128 	.ascii "PRESS A/B TO PLAY"
             2F 42 20 54 4F 20 50
             4C 41 59
      000075 0A                     129 	.db 0x0a
      000076 00                     130 	.db 0x00
                                    131 	.area _CODE
                                    132 	.area _INITIALIZER
                                    133 	.area _CABS (ABS)
