                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module sample_player
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _play_length
                                     12 	.globl _play_sample
                                     13 	.globl _play_bank
                                     14 	.globl _play_isr
                                     15 	.globl _set_sample
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area _DATA
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _INITIALIZED
      000000                         27 _play_bank::
      000000                         28 	.ds 1
      000001                         29 _play_sample::
      000001                         30 	.ds 2
      000003                         31 _play_length::
      000003                         32 	.ds 2
                                     33 ;--------------------------------------------------------
                                     34 ; absolute external ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DABS (ABS)
                                     37 ;--------------------------------------------------------
                                     38 ; global & static initialisations
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _GSINIT
                                     42 	.area _GSFINAL
                                     43 	.area _GSINIT
                                     44 ;--------------------------------------------------------
                                     45 ; Home
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 ;src/sample_player.c:7: void play_isr() __nonbanked __naked {
                                     49 ;	---------------------------------
                                     50 ; Function play_isr
                                     51 ; ---------------------------------
      000000                         52 _play_isr::
                                     53 ;src/sample_player.c:62: __endasm;
      000000 21r03r00         [12]   54 	ld	hl, #_play_length ; something left to play?
      000003 2A               [ 8]   55 	ld	a, (hl+)
      000004 B6               [ 8]   56 	or	(hl)
      000005 C8               [20]   57 	ret	z
      000006 21r01r00         [12]   58 	ld	hl, #_play_sample
      000009 2A               [ 8]   59 	ld	a, (hl+)
      00000A 66               [ 8]   60 	ld	h, (hl)
      00000B 6F               [ 4]   61 	ld	l, a ; HL = current position inside the sample
                                     62 ;	load new waveform
      00000C FAr00r00         [16]   63 	ld	a, (#__current_bank) ; save bank and switch
      00000F 5F               [ 4]   64 	ld	e, a
      000010 FAr00r00         [16]   65 	ld	a, (#_play_bank)
      000013 EA 00 20         [16]   66 	ld	(#0x2000), a
      000016 AF               [ 4]   67 	xor	a
      000017 E0r00            [12]   68 	ldh	(_NR30_REG),a
                           00FF30    69 	_wave_addr	= 0xFF30
                                     70 	.rept	16
                                     71 	ld	a, (hl+)
                                     72 	ldh	(_wave_addr), a
                                     73 	_wave_addr	= _wave_addr + 1
                                     74 	.endm
      000019 2A               [ 8]    1 	ld	a, (hl+)
      00001A E0 30            [12]    2 	ldh	(_wave_addr), a
                           00FF31     3 	_wave_addr	= _wave_addr + 1
      00001C 2A               [ 8]    1 	ld	a, (hl+)
      00001D E0 31            [12]    2 	ldh	(_wave_addr), a
                           00FF32     3 	_wave_addr	= _wave_addr + 1
      00001F 2A               [ 8]    1 	ld	a, (hl+)
      000020 E0 32            [12]    2 	ldh	(_wave_addr), a
                           00FF33     3 	_wave_addr	= _wave_addr + 1
      000022 2A               [ 8]    1 	ld	a, (hl+)
      000023 E0 33            [12]    2 	ldh	(_wave_addr), a
                           00FF34     3 	_wave_addr	= _wave_addr + 1
      000025 2A               [ 8]    1 	ld	a, (hl+)
      000026 E0 34            [12]    2 	ldh	(_wave_addr), a
                           00FF35     3 	_wave_addr	= _wave_addr + 1
      000028 2A               [ 8]    1 	ld	a, (hl+)
      000029 E0 35            [12]    2 	ldh	(_wave_addr), a
                           00FF36     3 	_wave_addr	= _wave_addr + 1
      00002B 2A               [ 8]    1 	ld	a, (hl+)
      00002C E0 36            [12]    2 	ldh	(_wave_addr), a
                           00FF37     3 	_wave_addr	= _wave_addr + 1
      00002E 2A               [ 8]    1 	ld	a, (hl+)
      00002F E0 37            [12]    2 	ldh	(_wave_addr), a
                           00FF38     3 	_wave_addr	= _wave_addr + 1
      000031 2A               [ 8]    1 	ld	a, (hl+)
      000032 E0 38            [12]    2 	ldh	(_wave_addr), a
                           00FF39     3 	_wave_addr	= _wave_addr + 1
      000034 2A               [ 8]    1 	ld	a, (hl+)
      000035 E0 39            [12]    2 	ldh	(_wave_addr), a
                           00FF3A     3 	_wave_addr	= _wave_addr + 1
      000037 2A               [ 8]    1 	ld	a, (hl+)
      000038 E0 3A            [12]    2 	ldh	(_wave_addr), a
                           00FF3B     3 	_wave_addr	= _wave_addr + 1
      00003A 2A               [ 8]    1 	ld	a, (hl+)
      00003B E0 3B            [12]    2 	ldh	(_wave_addr), a
                           00FF3C     3 	_wave_addr	= _wave_addr + 1
      00003D 2A               [ 8]    1 	ld	a, (hl+)
      00003E E0 3C            [12]    2 	ldh	(_wave_addr), a
                           00FF3D     3 	_wave_addr	= _wave_addr + 1
      000040 2A               [ 8]    1 	ld	a, (hl+)
      000041 E0 3D            [12]    2 	ldh	(_wave_addr), a
                           00FF3E     3 	_wave_addr	= _wave_addr + 1
      000043 2A               [ 8]    1 	ld	a, (hl+)
      000044 E0 3E            [12]    2 	ldh	(_wave_addr), a
                           00FF3F     3 	_wave_addr	= _wave_addr + 1
      000046 2A               [ 8]    1 	ld	a, (hl+)
      000047 E0 3F            [12]    2 	ldh	(_wave_addr), a
                           00FF40     3 	_wave_addr	= _wave_addr + 1
      000049 3E 80            [ 8]   75 	ld	a, #0x80
      00004B E0r00            [12]   76 	ldh	(_NR30_REG),a
      00004D 3E FE            [ 8]   77 	ld	a, #0xFE ; length of wave
      00004F E0r00            [12]   78 	ldh	(_NR31_REG),a
      000051 3E 20            [ 8]   79 	ld	a, #0x20 ; volume
      000053 E0r00            [12]   80 	ldh	(_NR32_REG),a
      000055 AF               [ 4]   81 	xor	a ; low freq bits are zero
      000056 E0r00            [12]   82 	ldh	(_NR33_REG),a
      000058 3E C7            [ 8]   83 	ld	a, #0xC7 ; start; no loop; high freq bits are 111
      00005A E0r00            [12]   84 	ldh	(_NR34_REG),a
      00005C 7B               [ 4]   85 	ld	a, e ; restore bank
      00005D EA 00 20         [16]   86 	ld	(#0x2000), a
      000060 7D               [ 4]   87 	ld	a, l ; save current position
      000061 EAr01r00         [16]   88 	ld	(#_play_sample), a
      000064 7C               [ 4]   89 	ld	a, h
      000065 EAr02r00         [16]   90 	ld	(#_play_sample+1), a
      000068 21r03r00         [12]   91 	ld	hl, #_play_length ; decrement length variable
      00006B 7E               [ 8]   92 	ld	a, (hl)
      00006C D6 01            [ 8]   93 	sub	#1
      00006E 22               [ 8]   94 	ld	(hl+), a
      00006F 7E               [ 8]   95 	ld	a, (hl)
      000070 DE 00            [ 8]   96 	sbc	#0
      000072 77               [ 8]   97 	ld	(hl), a
      000073 C9               [16]   98 	ret
                                     99 ;src/sample_player.c:63: }
                                    100 ;src/sample_player.c:65: void set_sample(UINT8 bank, const UINT8 * sample, UINT16 length) __critical {
                                    101 ;	---------------------------------
                                    102 ; Function set_sample
                                    103 ; ---------------------------------
      000074                        104 _set_sample::
      000074 F3               [ 4]  105 	di
      000075 EAr00r00         [16]  106 	ld	(#_play_bank),a
      000078 21r01r00         [12]  107 	ld	hl, #_play_sample
      00007B 7B               [ 4]  108 	ld	a, e
      00007C 22               [ 8]  109 	ld	(hl+), a
      00007D 72               [ 8]  110 	ld	(hl), d
                                    111 ;src/sample_player.c:66: play_bank = bank, play_sample = sample, play_length = length >> 4;
      00007E F8 02            [12]  112 	ldhl	sp,	#2
      000080 7E               [ 8]  113 	ld	a, (hl)
      000081 EAr03r00         [16]  114 	ld	(#_play_length),a
      000084 F8 03            [12]  115 	ldhl	sp,	#3
      000086 7E               [ 8]  116 	ld	a, (hl)
      000087 21r04r00         [12]  117 	ld	hl, #_play_length + 1
      00008A 77               [ 8]  118 	ld	(hl), a
      00008B CB 3E            [16]  119 	srl	(hl)
      00008D 2B               [ 8]  120 	dec	hl
      00008E CB 1E            [16]  121 	rr	(hl)
      000090 23               [ 8]  122 	inc	hl
      000091 CB 3E            [16]  123 	srl	(hl)
      000093 2B               [ 8]  124 	dec	hl
      000094 CB 1E            [16]  125 	rr	(hl)
      000096 23               [ 8]  126 	inc	hl
      000097 CB 3E            [16]  127 	srl	(hl)
      000099 2B               [ 8]  128 	dec	hl
      00009A CB 1E            [16]  129 	rr	(hl)
      00009C 23               [ 8]  130 	inc	hl
      00009D CB 3E            [16]  131 	srl	(hl)
      00009F 2B               [ 8]  132 	dec	hl
      0000A0 CB 1E            [16]  133 	rr	(hl)
                                    134 ;src/sample_player.c:67: }
      0000A2 FB               [ 4]  135 	ei
      0000A3 E1               [12]  136 	pop	hl
      0000A4 F1               [12]  137 	pop	af
      0000A5 E9               [ 4]  138 	jp	(hl)
                                    139 	.area _HOME
                                    140 ;--------------------------------------------------------
                                    141 ; code
                                    142 ;--------------------------------------------------------
                                    143 	.area _CODE
                                    144 	.area _CODE
                                    145 	.area _INITIALIZER
      000000                        146 __xinit__play_bank:
      000000 01                     147 	.db #0x01	; 1
      000001                        148 __xinit__play_sample:
      000001 00 00                  149 	.dw #0x0000
      000003                        150 __xinit__play_length:
      000003 00 00                  151 	.dw #0x0000
                                    152 	.area _CABS (ABS)
