                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_bkg_palette
                                     13 	.globl _fill_bkg_rect
                                     14 	.globl _set_bkg_tiles
                                     15 	.globl _set_bkg_data
                                     16 	.globl _display_off
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _DATA
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _INITIALIZED
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; global & static initialisations
                                     34 ;--------------------------------------------------------
                                     35 	.area _HOME
                                     36 	.area _GSINIT
                                     37 	.area _GSFINAL
                                     38 	.area _GSINIT
                                     39 ;--------------------------------------------------------
                                     40 ; Home
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _HOME
                                     44 ;--------------------------------------------------------
                                     45 ; code
                                     46 ;--------------------------------------------------------
                                     47 	.area _CODE
                                     48 ;src/main.c:5: void main() {
                                     49 ;	---------------------------------
                                     50 ; Function main
                                     51 ; ---------------------------------
      000000                         52 _main::
                                     53 ;src/main.c:6: DISPLAY_OFF;
      000000 CDr00r00         [24]   54 	call	_display_off
                                     55 ;src/main.c:7: fill_bkg_rect(0, 0, DEVICE_SCREEN_WIDTH, DEVICE_SCREEN_HEIGHT, 0);
      000003 AF               [ 4]   56 	xor	a, a
      000004 67               [ 4]   57 	ld	h, a
      000005 2E 12            [ 8]   58 	ld	l, #0x12
      000007 E5               [16]   59 	push	hl
      000008 3E 14            [ 8]   60 	ld	a, #0x14
      00000A F5               [16]   61 	push	af
      00000B 33               [ 8]   62 	inc	sp
      00000C AF               [ 4]   63 	xor	a, a
      00000D 0F               [ 4]   64 	rrca
      00000E F5               [16]   65 	push	af
      00000F CDr00r00         [24]   66 	call	_fill_bkg_rect
      000012 E8 05            [16]   67 	add	sp, #5
                                     68 ;src/main.c:11: if (_cpu == CGB_TYPE) {
      000014 FAr00r00         [16]   69 	ld	a, (#__cpu)
      000017 D6 11            [ 8]   70 	sub	a, #0x11
      000019 20 0D            [12]   71 	jr	NZ, 00102$
                                     72 ;src/main.c:12: set_bkg_palette(BKGF_CGB_PAL0, GBDK_2020_logo_PALETTE_COUNT, GBDK_2020_logo_palettes);
      00001B 11r00r00         [12]   73 	ld	de, #_GBDK_2020_logo_palettes
      00001E D5               [16]   74 	push	de
      00001F 21 00 04         [12]   75 	ld	hl, #0x400
      000022 E5               [16]   76 	push	hl
      000023 CDr00r00         [24]   77 	call	_set_bkg_palette
      000026 E8 04            [16]   78 	add	sp, #4
      000028                         79 00102$:
                                     80 ;src/main.c:17: set_native_tile_data(0, GBDK_2020_logo_TILE_COUNT, GBDK_2020_logo_tiles);
                                     81 ;../../../include/gb/gb.h:1836: set_bkg_data(first_tile, nb_tiles, data);
      000028 11r00r00         [12]   82 	ld	de, #_GBDK_2020_logo_tiles
      00002B D5               [16]   83 	push	de
      00002C 21 00 29         [12]   84 	ld	hl, #0x2900
      00002F E5               [16]   85 	push	hl
      000030 CDr00r00         [24]   86 	call	_set_bkg_data
      000033 E8 04            [16]   87 	add	sp, #4
                                     88 ;src/main.c:19: if (_cpu == CGB_TYPE) {
      000035 FAr00r00         [16]   89 	ld	a, (#__cpu)
      000038 D6 11            [ 8]   90 	sub	a, #0x11
      00003A 20 17            [12]   91 	jr	NZ, 00104$
                                     92 ;src/main.c:20: VBK_REG = VBK_ATTRIBUTES;
      00003C 3E 01            [ 8]   93 	ld	a, #0x01
      00003E E0r00            [12]   94 	ldh	(_VBK_REG + 0), a
                                     95 ;src/main.c:25: GBDK_2020_logo_map_attributes);
                                     96 ;src/main.c:21: set_tile_map((DEVICE_SCREEN_WIDTH - (GBDK_2020_logo_WIDTH >> 3)) >> 1, 
      000040 11r00r00         [12]   97 	ld	de, #_GBDK_2020_logo_map_attributes
      000043 D5               [16]   98 	push	de
      000044 21 14 12         [12]   99 	ld	hl, #0x1214
      000047 E5               [16]  100 	push	hl
      000048 AF               [ 4]  101 	xor	a, a
      000049 0F               [ 4]  102 	rrca
      00004A F5               [16]  103 	push	af
      00004B CDr00r00         [24]  104 	call	_set_bkg_tiles
      00004E E8 06            [16]  105 	add	sp, #6
                                    106 ;src/main.c:26: VBK_REG = VBK_TILES;
      000050 AF               [ 4]  107 	xor	a, a
      000051 E0r00            [12]  108 	ldh	(_VBK_REG + 0), a
      000053                        109 00104$:
                                    110 ;src/main.c:48: GBDK_2020_logo_map);
                                    111 ;src/main.c:44: set_tile_map((DEVICE_SCREEN_WIDTH - (GBDK_2020_logo_WIDTH >> 3)) >> 1, 
      000053 11r00r00         [12]  112 	ld	de, #_GBDK_2020_logo_map
      000056 D5               [16]  113 	push	de
      000057 21 14 12         [12]  114 	ld	hl, #0x1214
      00005A E5               [16]  115 	push	hl
      00005B AF               [ 4]  116 	xor	a, a
      00005C 0F               [ 4]  117 	rrca
      00005D F5               [16]  118 	push	af
      00005E CDr00r00         [24]  119 	call	_set_bkg_tiles
      000061 E8 06            [16]  120 	add	sp, #6
                                    121 ;src/main.c:50: SHOW_BKG;
      000063 F0r00            [12]  122 	ldh	a, (_LCDC_REG + 0)
      000065 F6 01            [ 8]  123 	or	a, #0x01
      000067 E0r00            [12]  124 	ldh	(_LCDC_REG + 0), a
                                    125 ;src/main.c:51: DISPLAY_ON;
      000069 F0r00            [12]  126 	ldh	a, (_LCDC_REG + 0)
      00006B F6 80            [ 8]  127 	or	a, #0x80
      00006D E0r00            [12]  128 	ldh	(_LCDC_REG + 0), a
                                    129 ;src/main.c:52: }
      00006F C9               [16]  130 	ret
                                    131 	.area _CODE
                                    132 	.area _INITIALIZER
                                    133 	.area _CABS (ABS)
