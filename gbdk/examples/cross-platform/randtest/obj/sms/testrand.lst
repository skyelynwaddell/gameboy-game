                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module testrand
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _waitpad
                                     13 	.globl _arand
                                     14 	.globl _initarand
                                     15 	.globl _rand
                                     16 	.globl _puts
                                     17 	.globl _printf
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                           00003E    21 _MEMORY_CTL	=	0x003e
                           00003F    22 _JOY_CTL	=	0x003f
                           00007E    23 _VCOUNTER	=	0x007e
                           00007F    24 _PSG	=	0x007f
                           00007F    25 _HCOUNTER	=	0x007f
                           0000BE    26 _VDP_DATA	=	0x00be
                           0000BF    27 _VDP_CMD	=	0x00bf
                           0000BF    28 _VDP_STATUS	=	0x00bf
                           0000DC    29 _JOY_PORT1	=	0x00dc
                           0000DD    30 _JOY_PORT2	=	0x00dd
                           0000F0    31 _FMADDRESS	=	0x00f0
                           0000F1    32 _FMDATA	=	0x00f1
                           0000F2    33 _AUDIOCTRL	=	0x00f2
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area _DATA
                           00FFFC    38 _RAM_CONTROL	=	0xfffc
                           00FFF8    39 _GLASSES_3D	=	0xfff8
                           00FFFD    40 _MAP_FRAME0	=	0xfffd
                           00FFFE    41 _MAP_FRAME1	=	0xfffe
                           00FFFF    42 _MAP_FRAME2	=	0xffff
                                     43 ;--------------------------------------------------------
                                     44 ; ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _INITIALIZED
                                     47 ;--------------------------------------------------------
                                     48 ; absolute external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area _DABS (ABS)
                                     51 ;--------------------------------------------------------
                                     52 ; global & static initialisations
                                     53 ;--------------------------------------------------------
                                     54 	.area _HOME
                                     55 	.area _GSINIT
                                     56 	.area _GSFINAL
                                     57 	.area _GSINIT
                                     58 ;--------------------------------------------------------
                                     59 ; Home
                                     60 ;--------------------------------------------------------
                                     61 	.area _HOME
                                     62 	.area _HOME
                                     63 ;--------------------------------------------------------
                                     64 ; code
                                     65 ;--------------------------------------------------------
                                     66 	.area _CODE
                                     67 ;src/testrand.c:14: void main(void)
                                     68 ;	---------------------------------
                                     69 ; Function main
                                     70 ; ---------------------------------
      000000                         71 _main::
      000000 DD E5            [15]   72 	push	ix
      000002 DD 21 00 00      [14]   73 	ld	ix,#0
      000006 DD 39            [15]   74 	add	ix,sp
      000008 3B               [ 6]   75 	dec	sp
                                     76 ;src/testrand.c:16: while(TRUE) {
      000009                         77 00103$:
                                     78 ;src/testrand.c:17: puts("press A...");
      000009 21r47r00         [10]   79 	ld	hl, #___str_0
      00000C CDr00r00         [17]   80 	call	_puts
                                     81 ;src/testrand.c:18: waitpad(J_A);
      00000F 2E 10            [ 7]   82 	ld	l, #0x10
                                     83 ;	spillPairReg hl
                                     84 ;	spillPairReg hl
      000011 CDr00r00         [17]   85 	call	_waitpad
                                     86 ;src/testrand.c:19: initarand(sys_time);
      000014 2Ar00r00         [16]   87 	ld	hl, (_sys_time)
      000017 CDr00r00         [17]   88 	call	_initarand
                                     89 ;src/testrand.c:20: for (uint8_t i = 0; i != 16; i++) 
      00001A DD 36 FF 00      [19]   90 	ld	-1 (ix), #0x00
      00001E                         91 00106$:
      00001E DD 7E FF         [19]   92 	ld	a, -1 (ix)
      000021 D6 10            [ 7]   93 	sub	a, #0x10
      000023 28 E4            [12]   94 	jr	Z, 00103$
                                     95 ;src/testrand.c:21: printf("rand=%hx arand=%hx\n", (uint8_t)rand(), (uint8_t)arand());
      000025 CDr00r00         [17]   96 	call	_arand
      000028 4D               [ 4]   97 	ld	c, l
      000029 06 00            [ 7]   98 	ld	b, #0x00
      00002B C5               [11]   99 	push	bc
      00002C CDr00r00         [17]  100 	call	_rand
      00002F C1               [10]  101 	pop	bc
      000030 26 00            [ 7]  102 	ld	h, #0x00
                                    103 ;	spillPairReg hl
                                    104 ;	spillPairReg hl
      000032 C5               [11]  105 	push	bc
      000033 E5               [11]  106 	push	hl
      000034 21r52r00         [10]  107 	ld	hl, #___str_1
      000037 E5               [11]  108 	push	hl
      000038 CDr00r00         [17]  109 	call	_printf
      00003B F1               [10]  110 	pop	af
      00003C F1               [10]  111 	pop	af
      00003D F1               [10]  112 	pop	af
                                    113 ;src/testrand.c:20: for (uint8_t i = 0; i != 16; i++) 
      00003E DD 34 FF         [23]  114 	inc	-1 (ix)
      000041 18 DB            [12]  115 	jr	00106$
                                    116 ;src/testrand.c:23: }
      000043 33               [ 6]  117 	inc	sp
      000044 DD E1            [14]  118 	pop	ix
      000046 C9               [10]  119 	ret
      000047                        120 ___str_0:
      000047 70 72 65 73 73 20 41   121 	.ascii "press A..."
             2E 2E 2E
      000051 00                     122 	.db 0x00
      000052                        123 ___str_1:
      000052 72 61 6E 64 3D 25 68   124 	.ascii "rand=%hx arand=%hx"
             78 20 61 72 61 6E 64
             3D 25 68 78
      000064 0A                     125 	.db 0x0a
      000065 00                     126 	.db 0x00
                                    127 	.area _CODE
                                    128 	.area _INITIALIZER
                                    129 	.area _CABS (ABS)
