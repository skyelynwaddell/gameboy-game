                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module testrand
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _waitpad
                                     13 	.globl _arand
                                     14 	.globl _initarand
                                     15 	.globl _rand
                                     16 	.globl _puts
                                     17 	.globl _printf
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                                     49 ;src/testrand.c:14: void main(void)
                                     50 ;	---------------------------------
                                     51 ; Function main
                                     52 ; ---------------------------------
      000000                         53 _main::
                                     54 ;src/testrand.c:16: while(TRUE) {
      000000                         55 00103$:
                                     56 ;src/testrand.c:17: puts("press A...");
      000000 11r3Er00         [12]   57 	ld	de, #___str_0
      000003 CDr00r00         [24]   58 	call	_puts
                                     59 ;src/testrand.c:18: waitpad(J_A);
      000006 3E 10            [ 8]   60 	ld	a, #0x10
      000008 CDr00r00         [24]   61 	call	_waitpad
                                     62 ;src/testrand.c:19: initarand(sys_time);
      00000B 21r00r00         [12]   63 	ld	hl, #_sys_time
      00000E 2A               [ 8]   64 	ld	a, (hl+)
      00000F 5F               [ 4]   65 	ld	e, a
      000010 56               [ 8]   66 	ld	d, (hl)
      000011 D5               [16]   67 	push	de
      000012 CDr00r00         [24]   68 	call	_initarand
      000015 E1               [12]   69 	pop	hl
                                     70 ;src/testrand.c:20: for (uint8_t i = 0; i != 16; i++) 
      000016 0E 00            [ 8]   71 	ld	c, #0x00
      000018                         72 00106$:
      000018 79               [ 4]   73 	ld	a, c
      000019 D6 10            [ 8]   74 	sub	a, #0x10
      00001B 28 E3            [12]   75 	jr	Z, 00103$
                                     76 ;src/testrand.c:21: printf("rand=%hx arand=%hx\n", (uint8_t)rand(), (uint8_t)arand());
      00001D C5               [16]   77 	push	bc
      00001E CDr00r00         [24]   78 	call	_arand
      000021 C1               [12]   79 	pop	bc
      000022 16 00            [ 8]   80 	ld	d, #0x00
      000024 C5               [16]   81 	push	bc
      000025 D5               [16]   82 	push	de
      000026 CDr00r00         [24]   83 	call	_rand
      000029 6B               [ 4]   84 	ld	l, e
                                     85 ;	spillPairReg hl
                                     86 ;	spillPairReg hl
      00002A D1               [12]   87 	pop	de
      00002B C1               [12]   88 	pop	bc
      00002C 26 00            [ 8]   89 	ld	h, #0x00
                                     90 ;	spillPairReg hl
                                     91 ;	spillPairReg hl
      00002E C5               [16]   92 	push	bc
      00002F D5               [16]   93 	push	de
      000030 E5               [16]   94 	push	hl
      000031 11r49r00         [12]   95 	ld	de, #___str_1
      000034 D5               [16]   96 	push	de
      000035 CDr00r00         [24]   97 	call	_printf
      000038 E8 06            [16]   98 	add	sp, #6
      00003A C1               [12]   99 	pop	bc
                                    100 ;src/testrand.c:20: for (uint8_t i = 0; i != 16; i++) 
      00003B 0C               [ 4]  101 	inc	c
                                    102 ;src/testrand.c:23: }
      00003C 18 DA            [12]  103 	jr	00106$
      00003E                        104 ___str_0:
      00003E 70 72 65 73 73 20 41   105 	.ascii "press A..."
             2E 2E 2E
      000048 00                     106 	.db 0x00
      000049                        107 ___str_1:
      000049 72 61 6E 64 3D 25 68   108 	.ascii "rand=%hx arand=%hx"
             78 20 61 72 61 6E 64
             3D 25 68 78
      00005B 0A                     109 	.db 0x0a
      00005C 00                     110 	.db 0x00
                                    111 	.area _CODE
                                    112 	.area _INITIALIZER
                                    113 	.area _CABS (ABS)
